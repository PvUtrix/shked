// –°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è –¥–µ–º–æ-—Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function fixDemoStudent() {
  try {
    console.log('üîß –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –¥–µ–º–æ-—Å—Ç—É–¥–µ–Ω—Ç–∞ –≤ –≥—Ä—É–ø–ø—É...')

    // –ù–∞—Ö–æ–¥–∏–º –≥—Ä—É–ø–ø—É
    const group = await prisma.group.findUnique({
      where: { name: '–¢–µ—Ö–ü—Ä–µ–¥ –ú–§–¢–ò 2025-27' }
    })

    if (!group) {
      console.error('‚ùå –ì—Ä—É–ø–ø–∞ "–¢–µ—Ö–ü—Ä–µ–¥ –ú–§–¢–ò 2025-27" –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')
      return
    }

    console.log(`‚úÖ –ì—Ä—É–ø–ø–∞ –Ω–∞–π–¥–µ–Ω–∞: ${group.name} (${group.id})`)

    // –û–±–Ω–æ–≤–ª—è–µ–º –¥–µ–º–æ-—Å—Ç—É–¥–µ–Ω—Ç–∞
    const updatedStudent = await prisma.user.update({
      where: { email: 'student123@demo.com' },
      data: {
        groupId: group.id
      }
    })

    console.log(`‚úÖ –î–µ–º–æ-—Å—Ç—É–¥–µ–Ω—Ç –æ–±–Ω–æ–≤–ª–µ–Ω: ${updatedStudent.email}`)
    console.log(`   –ò–º—è: ${updatedStudent.firstName} ${updatedStudent.lastName}`)
    console.log(`   –ì—Ä—É–ø–ø–∞ ID: ${updatedStudent.groupId}`)

    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å UserGroup –¥–ª—è –ø–æ–¥–≥—Ä—É–ø–ø
    const userGroup = await prisma.userGroup.upsert({
      where: {
        userId_groupId: {
          userId: updatedStudent.id,
          groupId: group.id
        }
      },
      update: {
        subgroupCommerce: 1,
        subgroupTutorial: 1,
        subgroupFinance: 1,
        subgroupSystemThinking: 1
      },
      create: {
        userId: updatedStudent.id,
        groupId: group.id,
        subgroupCommerce: 1,
        subgroupTutorial: 1,
        subgroupFinance: 1,
        subgroupSystemThinking: 1
      }
    })

    console.log(`‚úÖ –ü–æ–¥–≥—Ä—É–ø–ø—ã –Ω–∞–∑–Ω–∞—á–µ–Ω—ã:`)
    console.log(`   –ö–æ–º–º–µ—Ä—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: ${userGroup.subgroupCommerce}`)
    console.log(`   –¢—å—é—Ç–æ—Ä–∏–∞–ª: ${userGroup.subgroupTutorial}`)
    console.log(`   –§–∏–Ω–∞–Ω—Å–æ–≤–æ–µ –º–æ–¥–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ: ${userGroup.subgroupFinance}`)
    console.log(`   –°–∏—Å—Ç–µ–º–Ω–æ–µ –º—ã—à–ª–µ–Ω–∏–µ: ${userGroup.subgroupSystemThinking}`)

    console.log('\nüéâ –ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –¥–µ–º–æ-—Å—Ç—É–¥–µ–Ω—Ç –º–æ–∂–µ—Ç –≤–∏–¥–µ—Ç—å –¥–æ–º–∞—à–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è.')

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', error)
  } finally {
    await prisma.$disconnect()
  }
}

fixDemoStudent()

