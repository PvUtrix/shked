// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ—Å—Ç—É–ø–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∫ –¥–æ–º–∞—à–Ω–µ–º—É –∑–∞–¥–∞–Ω–∏—é
import { PrismaClient } from '@prisma/client'

const prisma = new PrismaClient()

async function checkAccess() {
  try {
    const homeworkId = 'cmgr1wlbm001y9k3ygp5vwmcm'
    const studentEmail = 'student123@demo.com'

    // –ù–∞—Ö–æ–¥–∏–º —Å—Ç—É–¥–µ–Ω—Ç–∞
    const student = await prisma.user.findUnique({
      where: { email: studentEmail },
      select: {
        id: true,
        email: true,
        firstName: true,
        lastName: true,
        role: true,
        groupId: true,
        group: {
          select: {
            id: true,
            name: true
          }
        }
      }
    })

    console.log('\nüìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å—Ç—É–¥–µ–Ω—Ç–µ:')
    console.log(JSON.stringify(student, null, 2))

    if (!student) {
      console.error('‚ùå –°—Ç—É–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω!')
      return
    }

    // –ù–∞—Ö–æ–¥–∏–º –¥–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ
    const homework = await prisma.homework.findUnique({
      where: { id: homeworkId },
      include: {
        subject: {
          select: {
            id: true,
            name: true
          }
        },
        group: {
          select: {
            id: true,
            name: true
          }
        }
      }
    })

    console.log('\nüìù –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –¥–æ–º–∞—à–Ω–µ–º –∑–∞–¥–∞–Ω–∏–∏:')
    console.log(JSON.stringify(homework, null, 2))

    if (!homework) {
      console.error('‚ùå –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ!')
      return
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    console.log('\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–∞:')
    console.log(`–°—Ç—É–¥–µ–Ω—Ç –∏–∑ –≥—Ä—É–ø–ø—ã: ${student.groupId || '–ù–ï–¢ –ì–†–£–ü–ü–´'}`)
    console.log(`–ó–∞–¥–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã: ${homework.groupId || '–í–°–ï –ì–†–£–ü–ü–´'}`)

    const hasAccess = 
      !homework.groupId || // –ó–∞–¥–∞–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö –≥—Ä—É–ø–ø
      homework.groupId === student.groupId // –ó–∞–¥–∞–Ω–∏–µ –¥–ª—è –≥—Ä—É–ø–ø—ã —Å—Ç—É–¥–µ–Ω—Ç–∞

    if (hasAccess) {
      console.log('‚úÖ –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ï–°–¢–¨ –¥–æ—Å—Ç—É–ø –∫ –∑–∞–¥–∞–Ω–∏—é')
    } else {
      console.log('‚ùå –£ —Å—Ç—É–¥–µ–Ω—Ç–∞ –ù–ï–¢ –¥–æ—Å—Ç—É–ø–∞ –∫ –∑–∞–¥–∞–Ω–∏—é')
      console.log('\nüí° –ü—Ä–∏—á–∏–Ω–∞: –ó–∞–¥–∞–Ω–∏–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–æ –¥–ª—è –¥—Ä—É–≥–æ–π –≥—Ä—É–ø–ø—ã')
      console.log(`   –ì—Ä—É–ø–ø–∞ —Å—Ç—É–¥–µ–Ω—Ç–∞: ${student.group?.name || '–ù–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∞'}`)
      console.log(`   –ì—Ä—É–ø–ø–∞ –∑–∞–¥–∞–Ω–∏—è: ${homework.group?.name || '–í—Å–µ –≥—Ä—É–ø–ø—ã'}`)
    }

  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ:', error)
  } finally {
    await prisma.$disconnect()
  }
}

checkAccess()

