version: '3.8'

services:
  # База данных PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: shked-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-shked}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-shked123}
      POSTGRES_DB: ${POSTGRES_DB:-shked}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - shked-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-shked}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Next.js приложение
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shked-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-3000}:3000"
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER:-shked}:${POSTGRES_PASSWORD:-shked123}@postgres:5432/${POSTGRES_DB:-shked}?schema=public
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: production
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - shked-network
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma db seed &&
        node server.js
      "

  # Опционально: Adminer для управления базой данных
  adminer:
    image: adminer:latest
    container_name: shked-adminer
    restart: unless-stopped
    ports:
      - "${ADMINER_PORT:-8080}:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      - postgres
    networks:
      - shked-network

networks:
  shked-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
